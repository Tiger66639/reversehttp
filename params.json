{"name":"Reversehttp","tagline":"A dynamic, ReST-style means of enrolment and participation in an HTTP network; a dynamically-configurable \"Remote CGI\" service.  Joining the World Wide Web as an HTTP server has been an ad-hoc, manual process. By using the protocol defined here, programs can provide services to the Web just as easily as they request services from the Web.","body":"# Making the web symmetric\r\n\r\n[ReverseHttp](http://github.com/tonyg/reversehttp) is an\r\nimplementation of the [specifications][specs] hosted at\r\n<http://reversehttp.net>:\r\n\r\n - [ReverseHttp][rev]: a dynamic, ReST-style means of enrolment and\r\n   participation in an HTTP network. The `message/http` and\r\n   `application/http` MIME types defined by [RFC 2616][] are used to\r\n   build a dynamically-configurable \"Remote CGI\" service.\r\n\r\n - [RelayHttp][relay]: a protocol for tunnelling HTTP traffic over\r\n   HTTP, with the goal of providing portable, general, securable\r\n   access to the World Wide Web for programs running in restricted\r\n   environments, including Javascript programs running in browsers.\r\n\r\nJoining the World Wide Web as an HTTP server has been an ad-hoc,\r\nmanual process. By using the [ReverseHttp protocol][rev], programs can\r\nprovide services to the Web just as easily as they request services\r\nfrom the Web.\r\n\r\n## Code overview\r\n\r\n - `src/` holds the server implementation, written in Erlang using\r\n   Mochiweb.\r\n\r\n - `priv/www/` holds the Javascript client implementation and demos.\r\n\r\n - `priv/java/` holds the Java client implementation.\r\n\r\n - `priv/python/` holds the Python client implementation.\r\n\r\n## Building and running ReverseHttp\r\n\r\nYou will need Erlang installed. Run `make`. If this succeeds, run `./start-dev.sh`.\r\n\r\nBy default, the server will now be running on port 8000, serving\r\ncontent from `priv/www`. Try <http://localhost:8000/>: you should see\r\nan index of demos.\r\n\r\nTo change the port number, edit `reversehttp.app`. The version in\r\n`src/` is the master copy, but the version in `ebin/` is the one\r\nthat's used to actually run the software.\r\n\r\n## Software License\r\n\r\nReverseHttp is [open-source](http://www.opensource.org/) code,\r\nlicensed under the very liberal [MIT\r\nlicense](http://www.opensource.org/licenses/mit-license.php):\r\n\r\n    Copyright (c) 2008, 2009, 2010 Tony Garnock-Jones <tonygarnockjones@gmail.com>\r\n    Copyright (c) 2008, 2009 LShift Ltd. <query@lshift.net>\r\n\r\n    Permission is hereby granted, free of charge, to any person\r\n    obtaining a copy of this software and associated documentation\r\n    files (the \"Software\"), to deal in the Software without\r\n    restriction, including without limitation the rights to use, copy,\r\n    modify, merge, publish, distribute, sublicense, and/or sell copies\r\n    of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be\r\n    included in all copies or substantial portions of the Software.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n    DEALINGS IN THE SOFTWARE.\r\n\r\n  [rev]: http://reversehttp.net/reverse-http-spec.html\r\n  [relay]: http://reversehttp.net/relay-http-spec.html\r\n  [specs]: http://reversehttp.net/specs.html\r\n  [RFC 2616]: http://www.w3.org/Protocols/rfc2616/rfc2616.html\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}